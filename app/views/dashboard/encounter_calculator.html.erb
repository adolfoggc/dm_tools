<div>
  <p>
    <%= select_tag(:monster, options_for_select(@monsters.collect { |m| [m.name.humanize.capitalize, m.challange_rating]})) %>
  </p>
  <%= easy_button(t('general.add'), 'primary', {event_type: 'onclick', event_method: 'check_monsters()'}) %>
  
  <br>
  <div id="encounter_area" class="row">
  </div>
</div>

<script>
  function check_monsters(){
    monster = $('#monster option:selected').text()
    challange = $('#monster').val()
    if($('#'+monster).length == 0){
      add_monster(monster, challange)
    } else {
      more(monster, challange)
    }
  }

  function add_monster(monster, challange){
    html = create_card_string(monster, challange)
    $('#encounter_area').append(html)
    console.log(xp(challange))
  }

  function create_card_string(monster, challange){
    html =  '<div class="col-xl-3 col-md-6 mb-4" id="' + monster +'">'
    html +=     '<div class="card border-left-' + 'primary' + ' shadow h-100 py-2">'
    html +=          '<div class="card-body">'
    html +=              '<div class="row no-gutters align-items-center">'
    html +=                  '<div class="col mr-2">'
    html +=                    '<div class="text-xs font-weight-bold text-' + 'primary' + ' text-uppercase mb-1">'
    html +=                        challange + '</div>'
    html +=                    '<div class="h5 mb-0 font-weight-bold text-gray-800" id="' + monster + '_name" data-count="1">'
    html +=                      monster                              
    html +=                    '</div>'
    html +=                  '</div>'
    html +=                  '<div class="col-auto">'
    html +=                      '<i class="fa fa-minus fa-2x text-black-300" onclick="less(\'' + monster + '\')"></i>'
    html +=                      '&nbsp;'
    html +=                      '<i class="fa fa-plus fa-2x text-black-300"  onclick="more(\'' + monster + '\')"></i>'
    html +=                  '</div>'
    html +=              '</div>'
    html +=          '</div>'
    html +=      '</div>'
    html +=  '</div>'
    return html
  }

  function more(id, challange){
    target = '#'+id+'_name'
    count = get_count(target) + 1
    $(target).html(new_text(id, count))
    update_count(id, count)
    console.log(xp(challange))
  }

  function less(id, challange){
    target = '#'+id+'_name'
    count = get_count(target) - 1
    $(target).html(new_text(id, count))
    update_count(id, count)
    console.log(xp(challange))
  }

  function get_count(target){
    return parseInt($(target).data('count'))
  }

  function update_count(id, count){
    if(count == 0){
      $('#'+id).remove()
    } else {
      $('#'+id+'_name').data('count', count)
    }
  }

  function new_text(id, count){
    txt = id
    if(count != 1){
      txt += ' x' + count
    }
    return txt
  }

  function xp(challange){
    if(['1/8', '1/4', '1/2', '1'].includes(challange)){
      group = challange.split("/")
      if(group.size == 1){
        value = 200
      } else {
        value = parseInt(200/group[1])
      }
    } else {
      rating = parseInt(challange)
      switch(rating){
        case 2:
          value = 450
          break
        case 3:
          value = 700
          break 
        case 4:
          value = 1100
          break
        case 5:
          value = 1800
          break
        case 6:
          value = 2300
          break
        case 7:
          value = 2900
          break
        case 8:
          value = 3900
          break
        case 9:
          value = 5000
          break
        case 10:
          value = 5900
          break
        case 11:
          value = 7200
          break
        case 12:
          value = 8400
          break
        case 13:
          value = 10000
          break
        case 14:
          value = 11500
          break
        case 15:
          value = 13000
          break
        case 16:
          value = 15000
          break
        case 17:
          value = 18000
          break
        case 18:
          value = 20000
          break
        case 19:
          value = 22000
          break
        case 20:
          value = 25000
          break
        case 21:
          value = 33000
          break
        case 22:
          value = 41000
          break
        case 23:
          value = 50000
          break
        case 24:
          value = 62000
          break
        case 25:
          value = 75000
          break
        case 26:
          value = 90000
          break
        case 27:
          value = 105000
          break
        case 28:
          value = 120000
          break
        case 29:
          value = 135000
          break
        case 30:
          value = 15500
          break
      }
    }

    return value
  }
</script>
